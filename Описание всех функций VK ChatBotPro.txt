
Поле ввода "Вопросник №":  При открытии нашего расширения пользователь должен выбрать одну из таблиц с вопросами из нашей базы данных указав номер от 1 до 2560. 

   - Идентификатор поля ввода: `EmployeeID`

Существует 2560 вариантов таблиц Questions_(EmployeeID) с вопросами Как для примера называются Questions_1234. В самих таблицах Questions_(EmployeeID) вопросы обозначаются как Question, а номер вопроса обозначается как QuestionID. 

Кнопка "ОК": Нужно нажать кнопку ОК чтобы подключить расширение к этой базе данных вопросов Questions_(EmployeeID)
   - Идентификатор: `loadQuestionsButton`


Поле выбора задержки: Так же есть возможность определить с какой скоростью наш чат бот будет отправлять сообщения. Изначально установлено 10 секунд стандартной задержки. Можно выбрать задержку от 8 секунд до 15 секунд.

   - Идентификатор: `delaySelect`
   - Выпадающий список:
     - Содержит варианты задержки, представленные в элементах `<div class="custom-select-option">`
     - Атрибут данных значений вариантов: `data-value`


Кнопка "Продолжить": Чтобы продолжить работу нашего EmployeeID мы загружаем состояние из таблицы State. В этой таблице указывается какой ответ на вопрос чат бот обработал в CurrentQuestionID для данного EmployeeID. А так же номер работника (вопросника) - EmployeeID.  

   - Идентификатор: `continueButton`

После этого мы подключаем нужную нам таблицу Questions_EmployeeID для этого EmployeeID и начинаем по порядку отправлять наши вопросы из столбика Question с порядковыми номерами QuestionID. После того как мы находим, что на нашей странице появились новые элементы содержащие сообщения нашего собеседника, и он закончил писать мы копируем его ответ для таблицы ответов на вопросы. Мы записываем полученные от собеседника ответы на наши вопросы. Результатом работы расширения является заполнение наших таблиц ответов Responses_(EmployeeID) Их будет 2560 например Responses_1234

 В каждой таблице Responses_(EmployeeID) у нас должно быть:
  ProcessedID - номер обработанного ответа
  QuestionText - текст вопроса
  AnswerText - текст ответа



Мы должны записывать состояние работы над конкретной таблицой ответов. Мы записываем в таблице State сколько вопросов нам осталось задать, чтобы получить на них ответ в RemainingQuestions. И в самом расширении у нас должно отображаться состояние прохождения опроса. 

   - `<p id="remainingQuestionNumber">`: Параграф для отображения оставшегося количества вопросов для этого EmployeeID
   - `<p id="currentQuestionNumber">`: Параграф для отображения текущего номера вопроса для этого EmployeeID

Кнопка "Приостановить": При нажатии кнопки Приостановить мы останавливаемся на текущем вопросе. И ставим наш опросник на паузу. 
   - Идентификатор: `pauseButton` 


Кнопка "Начать заново": При нажатии этой кнопки мы должны стереть все записи из таблицы Responses_(EmployeeID) этого EmployeeID и начать заполнять ответы и вопросы заново, с первого вопроса. В таблице State мы обновляем наши значения оставшихся вопросов из таблицы Questions_(EmployeeID) записывая новое значение RemainingQuestions для данного EmployeeID и указываем что теперь текущий вопрос 0 в CurrentQuestionID

 Идентификатор `resetButton`


Кнопка "Скачать историю": Эта кнопка формирует файл с базой вопросов и ответов на них для данного EmployeeID из Responses_(EmployeeID) выводя информацию из ProcessedID, QuestionText, AnswerText доступный для скачивания из расширения в формате .txt

Идентификатор `downloadHistoryButton`






Для каждой записи с вопросами и ответами на вопросы должна создаваться таблица  Responses_ с номером работника (от 1 до 2560)

Для создания базы вопросов и ответов вопросы берутся из таблицы вопросов Questions_ с номером работник (от 1 до 2560). Вопросы в столбике QuestionText а ответы в столбике AnswerText

Для записи состояния заполнения таблицы ответов на вопросы есть таблице State, там так же указывается какой текущий порядковый номер обработанного вопроса - CurrentQuestionID и сколько еще осталось вопросов на этом работнике RemainingQuestions а так же номер работника EmployeeID


CREATE TABLE Questions_(id 1 - 2560) (
  QuestionID INTEGER PRIMARY KEY,
  Question TEXT NOT NULL
);

CREATE TABLE Responses_ (id 1 - 2560) (
  ProcessedID INTEGER PRIMARY KEY,
  QuestionText TEXT NOT NULL,
  AnswerText TEXT
);


CREATE TABLE State (
  EmployeeID INTEGER PRIMARY KEY,
  CurrentQuestionID INTEGER,
  RemainingQuestions INTEGER
);